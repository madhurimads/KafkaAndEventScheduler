import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class FileContentUtilsTest {

    @Test
    void testKnownFormats() {
        assertEquals("application/doc", FileContentUtils.getHtmlContentType("doc"));
        assertEquals("application/docx", FileContentUtils.getHtmlContentType("docx"));
        assertEquals("application/xls", FileContentUtils.getHtmlContentType("xls"));
        assertEquals("application/xlsx", FileContentUtils.getHtmlContentType("xlsx"));
        assertEquals("text/plain", FileContentUtils.getHtmlContentType("txt"));
        assertEquals("image/jpg", FileContentUtils.getHtmlContentType("jpg"));
        assertEquals("image/jpeg", FileContentUtils.getHtmlContentType("jpeg"));
        assertEquals("image/png", FileContentUtils.getHtmlContentType("png"));
        assertEquals("application/pdf", FileContentUtils.getHtmlContentType("pdf"));
    }

    @Test
    void testCaseInsensitiveMatching() {
        assertEquals("application/pdf", FileContentUtils.getHtmlContentType("PDF"));
        assertEquals("application/docx", FileContentUtils.getHtmlContentType("DoCx"));
        assertEquals("image/png", FileContentUtils.getHtmlContentType("PnG"));
    }

    @Test
    void testUnknownFormatReturnsDefault() {
        assertEquals("text/plain", FileContentUtils.getHtmlContentType("exe"));
        assertEquals("text/plain", FileContentUtils.getHtmlContentType("unknown"));
        assertEquals("text/plain", FileContentUtils.getHtmlContentType(""));
    }

    @Test
    void testNullInputReturnsDefault() {
        // Optional: if you want to support null input safely
        assertThrows(NullPointerException.class, () -> FileContentUtils.getHtmlContentType(null));
    }
}
