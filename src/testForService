package gov.irs.fatca.qi.service.user;

import gov.irs.fatca.qi.ui.security.AuthenticatedUserDetails;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.springframework.security.core.userdetails.UserDetails;

import java.util.Collection;

import static org.junit.jupiter.api.Assertions.*;

class SiteMinderUserDetailsServiceTest {

    private SiteMinderUserDetailsService userDetailsService;

    @BeforeEach
    void setUp() {
        userDetailsService = new SiteMinderUserDetailsService();
    }

    @Test
    void testLoadUserByUsername_returnsAuthenticatedUserDetails() {
        // Arrange
        String sadiId = "TEST_USER";

        // Act
        UserDetails userDetails = userDetailsService.loadUserByUsername(sadiId);

        // Assert
        assertNotNull(userDetails);
        assertTrue(userDetails instanceof AuthenticatedUserDetails);

        assertEquals(sadiId, userDetails.getUsername());
        assertEquals("N/A", userDetails.getPassword());
        assertTrue(userDetails.isAccountNonExpired());
        assertTrue(userDetails.isAccountNonLocked());
        assertTrue(userDetails.isCredentialsNonExpired());
        assertTrue(userDetails.isEnabled());

        Collection authorities = userDetails.getAuthorities();
        assertEquals(1, authorities.size());
        assertTrue(authorities.stream().anyMatch(auth -> auth.getAuthority().equals("ROLE_USER")));
    }

    @Test
    void testCustomSecurityUserRoleAndPassword() {
        // Arrange
        userDetailsService.setDummySecurityUserPassword("secret");
        userDetailsService.setSecurityUserRole("ROLE_ADMIN");

        // Act
        UserDetails userDetails = userDetailsService.loadUserByUsername("admin_user");

        // Assert
        assertEquals("secret", userDetails.getPassword());
        assertTrue(userDetails.getAuthorities().stream()
                .anyMatch(auth -> auth.getAuthority().equals("ROLE_ADMIN")));
    }
}
