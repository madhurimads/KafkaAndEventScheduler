@Test
    void getUserGuide_whenActiveIndexZero_redirectsToLogin() throws Exception {
        String result = controller.getUserGuide(model, new ProfileInfo(), 0);
        assertEquals("redirect:/secure/qi-login/select-account/", result);

        verifyNoInteractions(profileServiceClientImpl, updateSubmissionStatusClientImpl);
    }

    @Test
    void getUserGuide_whenProfileSubmissionTypeAP_returnsNewApplicationGuide() throws Exception {
        ProfileInfo profile = new ProfileInfo();
        profile.setEntityId(1L);
        profile.setSadiId("SADI123");
        profile.setSubmissionType("AP");

        // Service returns updated profile
        when(profileServiceClientImpl.execute(anyLong(), anyString(), any())).thenReturn(profile);

        String result = controller.getUserGuide(model, profile, 1);

        assertEquals("user-guide-new-application", result);

        verify(updateSubmissionStatusClientImpl)
                .execute(eq(profile.getEntityId()), eq(profile.getSadiId()), any(), eq("IN"), any());
        verify(profileServiceClientImpl, times(2))
                .execute(eq(profile.getEntityId()), eq(profile.getSadiId()), any());
        verify(model).addAttribute("profileInfo", profile);
    }

    @Test
    void getUserGuide_whenProfileSubmissionTypeNonAP_returnsGuide() throws Exception {
        ProfileInfo profile = new ProfileInfo();
        profile.setEntityId(2L);
        profile.setSadiId("SADI456");
        profile.setSubmissionType("BP"); // not AP

        when(profileServiceClientImpl.execute(anyLong(), anyString(), any())).thenReturn(profile);

        String result = controller.getUserGuide(model, profile, 1);

        assertEquals("user-guide", result);
    }
